var canvas = document.querySelector("canvas");
var context = canvas.getContext("2d");
var button = document.querySelector("button");
var spriteSheetURL = "demos/Pacman/Sprites2.png";
var image = new Image();
image.src = spriteSheetURL;
const curMaze = 1;
var frame = 0;
var powerTime = 0;

function GetSpritePos(num){
    if (num < 16) {return {x:num*8, y:0}}
    else if (num < 32) {return {x:(num-16)*8, y: 8}}
    else if (num < 36) {return {x: 0, y: (num-31)*16}}
}
function GetGhostTarget(c){
    var i = c.type;
    var state = c.state;
    if (state == "chase") {
        if (i == 0) return {x: pacman.x, y: pacman.y, c:"#ff0000"}
        else if (i == 1) {
            if (pacman.f == 0) return {x: pacman.x - 4, y: pacman.y - 4, c:"#ffaaaa"}
            else return {x: pacman.x + 4*((pacman.f-2)%2), y: pacman.y + 4*((pacman.f-1)%2), c:"#ffaaaa"}
        }
        else if (i == 2){
            var intermediary = {x: 0, y:0}
            if (pacman.f == 0) intermediary = {x: pacman.x - 2, y: pacman.y - 2}
            else intermediary =  {x: pacman.x + 2*((pacman.f-2)%2), y: pacman.y + 2*((pacman.f-1)%2)}
            return {x: pacman.x + (intermediary.x - ghosts[0].x), y: pacman.y + (intermediary.y - ghosts[0].y), c:"#00ffff"}
        }
        else if (i == 3){
            const g = c;
            const d = (g.x-pacman.x)*(g.x-pacman.x) + (g.y-pacman.y)*(g.y-pacman.y);
            if (d > 64) return {x: pacman.x, y: pacman.y, c:"#ffaa00"}
            else return {x: 0, y: 34, c:"#ffaa00"}
        }
    }
    else if (state == "scatter") {
        if (i == 0) return {x: 25, y: -1, c:"#ff0000"}
        else if (i == 1) return {x: 03, y: -1, c:"#ffaaaa"}
        else if (i == 2) return {x: 27, y: 34, c:"#00ffff"}
        else if (i == 3) return {x: 00, y: 34, c:"#ffaa00"}
    }
    else if (state == "frightened") {
        if (i == 0) return {x: c.x, y: c.y, c:"#ff0000"}
        else if (i == 1) return {x: c.x, y: c.y, c:"#ffaaaa"}
        else if (i == 2) return {x: c.x, y: c.y, c:"#00ffff"}
        else if (i == 3) return {x: c.x, y: c.y, c:"#ffaa00"}
    }
    else if (state == "eaten") {
        if (i == 0) return {x: 14, y: 16, c:"#ff0000"}
        else if (i == 1) return {x: 14, y: 16, c:"#ffaaaa"}
        else if (i == 2) return {x: 14, y: 16, c:"#00ffff"}
        else if (i == 3) return {x: 14, y: 16, c:"#ffaa00"}
    }
}
var mazes = [
    [
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07, 11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 02, 01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 12, 12, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07, 11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 02, 01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 20, 28, 26, 31, 31, 21, 28, 24, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 22, 16, 16, 16, 16, 16, 16, 25, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 22, 16, 16, 16, 16, 16, 16, 25, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 22, 16, 16, 16, 16, 16, 16, 25, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 18, 19, 19, 19, 19, 19, 19, 17, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 12, 12, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07, 11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 02, 01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 12, 12, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07, 11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 06, 09, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 02, 01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07],
        [13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
    ],
    [
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [15, 15, 15, 15, 15, 15, 11, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 07, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 09, 00, 04, 08, 00, 04, 12, 12, 12, 12, 08, 00, 04, 08, 00, 06, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 09, 00, 06, 09, 00, 02, 03, 07, 11, 03, 01, 00, 06, 09, 00, 06, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 09, 00, 06, 09, 00, 00, 00, 06, 09, 00, 00, 00, 06, 09, 00, 06, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 09, 00, 06, 13, 12, 08, 00, 06, 09, 00, 04, 12, 14, 09, 00, 06, 15, 15, 15, 15, 15, 15],
        [03, 03, 03, 03, 03, 03, 01, 00, 06, 11, 03, 01, 00, 02, 01, 00, 02, 03, 07, 09, 00, 02, 03, 03, 03, 03, 03, 03],
        [00, 00, 00, 00, 00, 00, 00, 00, 06, 09, 00, 00, 00, 00, 00, 00, 00, 00, 06, 09, 00, 00, 00, 00, 00, 00, 00, 00],
        [12, 12, 08, 00, 04, 12, 12, 12, 14, 09, 00, 04, 12, 12, 12, 12, 08, 00, 06, 13, 12, 12, 12, 08, 00, 04, 12, 12],
        [11, 03, 01, 00, 02, 03, 03, 03, 07, 09, 00, 02, 03, 07, 11, 03, 01, 00, 06, 11, 03, 03, 03, 01, 00, 02, 03, 07],
        [09, 00, 00, 00, 00, 00, 00, 00, 06, 09, 00, 00, 00, 06, 09, 00, 00, 00, 06, 09, 00, 00, 00, 00, 00, 00, 00, 06],
        [09, 00, 04, 12, 12, 12, 08, 00, 06, 13, 12, 08, 00, 06, 09, 00, 04, 12, 14, 09, 00, 04, 12, 12, 12, 08, 00, 06],
        [09, 00, 02, 03, 03, 07, 09, 00, 02, 03, 03, 01, 16, 02, 01, 16, 02, 03, 03, 01, 00, 06, 11, 03, 03, 01, 00, 06],
        [09, 00, 00, 00, 00, 06, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 09, 00, 00, 00, 00, 06],
        [13, 12, 12, 08, 00, 06, 13, 12, 08, 00, 20, 28, 26, 31, 31, 21, 28, 24, 00, 04, 12, 14, 09, 00, 04, 12, 12, 14],
        [03, 03, 07, 09, 00, 02, 03, 03, 01, 00, 22, 16, 16, 16, 16, 16, 16, 25, 00, 02, 03, 03, 01, 00, 06, 11, 03, 03],
        [00, 00, 02, 01, 00, 00, 00, 00, 00, 00, 22, 16, 16, 16, 16, 16, 16, 25, 00, 00, 00, 00, 00, 00, 06, 09, 00, 00],
        [08, 00, 00, 00, 00, 04, 12, 12, 08, 00, 22, 16, 16, 16, 16, 16, 16, 25, 00, 04, 12, 12, 08, 00, 02, 01, 00, 04],
        [09, 00, 04, 08, 00, 06, 11, 03, 01, 00, 18, 19, 19, 19, 19, 19, 19, 17, 00, 02, 03, 07, 09, 00, 00, 00, 00, 06],
        [09, 00, 06, 09, 00, 06, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 09, 00, 04, 08, 00, 06],
        [09, 00, 06, 09, 00, 06, 09, 00, 04, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 08, 00, 06, 09, 00, 06, 09, 00, 06],
        [01, 00, 06, 09, 00, 06, 09, 00, 02, 03, 03, 03, 03, 07, 11, 03, 03, 03, 03, 01, 00, 06, 09, 00, 06, 09, 00, 02],
        [00, 00, 06, 09, 00, 06, 09, 00, 00, 00, 00, 00, 00, 06, 09, 00, 00, 00, 00, 00, 00, 06, 09, 00, 06, 09, 00, 00],
        [12, 12, 14, 09, 00, 06, 13, 12, 12, 12, 12, 08, 00, 06, 09, 00, 04, 12, 12, 12, 12, 14, 09, 00, 06, 13, 12, 12],
        [11, 03, 03, 01, 00, 02, 03, 03, 03, 03, 03, 01, 16, 02, 01, 16, 02, 03, 03, 03, 03, 03, 01, 00, 02, 03, 03, 07],
        [09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06],
        [09, 00, 04, 08, 00, 04, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 08, 00, 04, 08, 00, 06],
        [09, 00, 06, 09, 00, 06, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 09, 00, 06, 09, 00, 06],
        [09, 00, 06, 09, 00, 06, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 09, 00, 06, 09, 00, 06],
        [09, 00, 02, 01, 00, 06, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 09, 00, 02, 01, 00, 06],
        [09, 00, 00, 00, 00, 06, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 09, 00, 00, 00, 00, 06],
        [13, 12, 12, 12, 12, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 12, 12, 12, 12, 14],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],
    ],
];
var ghosts = [
    {type: 0, x: 12, y: 15, facing: 1+2, state: "chase"},
    {type: 0, x: 12, y: 15, facing: 1+2, state: "scatter"},
    {type: 0, x: 12, y: 15, facing: 1+2, state: "frightened"},
    {type: 0, x: 12, y: 15, facing: 1+2, state: "eaten"},
    {type: 1, x: 13, y: 15, facing: 1+2, state: "chase"},
    {type: 1, x: 13, y: 15, facing: 1+2, state: "scatter"},
    {type: 1, x: 13, y: 15, facing: 1+2, state: "frightened"},
    {type: 1, x: 13, y: 15, facing: 1+2, state: "eaten"},
    {type: 2, x: 14, y: 15, facing: 1+2, state: "chase"},
    {type: 2, x: 14, y: 15, facing: 1+2, state: "scatter"},
    {type: 2, x: 14, y: 15, facing: 1+2, state: "frightened"},
    {type: 2, x: 14, y: 15, facing: 1+2, state: "eaten"},
    {type: 3, x: 15, y: 15, facing: 1+2, state: "chase"},
    {type: 3, x: 15, y: 15, facing: 1+2, state: "scatter"},
    {type: 3, x: 15, y: 15, facing: 1+2, state: "frightened"},
    {type: 3, x: 15, y: 15, facing: 1+2, state: "eaten"},
];
var pacman = {x: 13, y: 21, f:0};

image.onload = function() {
    RenderMaze();
    RenderGhosts();
    ComputeGhosts();
    setInterval(RenderMaze, 100);
    setInterval(RenderGhosts, 100);
    setInterval(ComputeGhosts, 100);
}
button.onclick = function() {
    /*ComputeGhosts();
    ComputeGhosts();*/
    RenderMaze();
    RenderGhosts();
    ComputeGhosts();
}

function RenderMaze() {
    frame++;
    context.drawImage(
        image,
        132, 12,
        8, 8,
        0, 0,
        224, 288,
    );
    for (let y = 0; y < 36; y++) {
        for (let x = 0; x < 28; x++) {
            var p = GetSpritePos(mazes[curMaze][y][x]);
            context.drawImage(
                image,
                p.x, p.y,
                8, 8,
                x*8, y*8,
                8, 8,
            );
        }
    }
}
function RenderGhosts() {
    for (const c of ghosts){
        var p = GetSpritePos(32+c.type);
        if (c.state == "frightened") p = {x: 0, y: 96};
        else p.x = p.x + c.facing*32;
        if (c.state == "eaten") p.y = 80;
        else p.x = p.x + (frame%2)*16;
        if (c.state == "frightened" && powerTime < 200) p.x = p.x + Math.round(frame/2)%2 * 32;
        context.drawImage(
            image,
            p.x, p.y,
            8, 8,
            c.x*8-4, c.y*8-4,
            8, 8,
        );
        context.drawImage(
            image,
            p.x+8, p.y,
            8, 8,
            c.x*8+4, c.y*8-4,
            8, 8,
        );
        context.drawImage(
            image,
            p.x, p.y+8,
            8, 8,
            c.x*8-4, c.y*8+4,
            8, 8,
        );
        context.drawImage(
            image,
            p.x+8, p.y+8,
            8, 8,
            c.x*8+4, c.y*8+4,
            8, 8,
        );
    }
}
function ComputeGhosts() {
    for (const c of ghosts){
        let o = [];
        if (c.state=="eaten" && (mazes[curMaze][c.y][c.x] == 31 || mazes[curMaze][c.y][c.x] == 16)){
            c.facing = 2;
            c.y = c.y+1;
            //if (c.y == 18) c.y = c.y-1;
            continue;
        }
        for (let d = 0; d < 4; d++){
            //console.log(c.facing + ", " +d);
            if (((c.facing+2)%4) == d) continue;
            let m = {x:0, y:0, f:d};
            if (d == 0) m.y = -1;
            else if (d == 1) m.x = -1;
            else if (d == 2) m.y = 1;
            else if (d == 3) m.x = 1;
            const w = mazes[curMaze][c.y+m.y][c.x+m.x]
            //console.log(w);
            if (!(w == 0 || w == 16 || w == undefined || (w == 31 && c.state=="eaten"))) continue;
            if (m.y == -1 && w == 16) continue;
            /*context.drawImage(
                image,
                128, 0,
                8, 8,
                (m.x+c.x)*8, (m.y+c.y)*8,
                8, 8,
            );*/
            o[d] = m;
        }
        const t = GetGhostTarget(c);
        context.beginPath();
        context.moveTo(c.x*8+4, c.y*8+4);
        context.lineTo(t.x*8+4, t.y*8+4);
        context.strokeStyle = t.c;
        context.stroke();
        let b = {x:0, y:0, f:0, d:10000000};
        for (let d = 0; d < 4; d++){
            if (o[d] == undefined) continue;
            m = o[d];
            m.d = (c.x+m.x-t.x)*(c.x+m.x-t.x) + (c.y+m.y-t.y)*(c.y+m.y-t.y);
            if (c.state == "frightened") m.d = Math.random()*100;
            //console.log(m.f + ", " + m.x + ", " + m.y + ", " + m.d);
            if (m.d < b.d){
                b = m;
                //console.log(m.f + ", " + m.x + ", " + m.y + ", " + m.d);
            }
        }
        /*context.drawImage(
            image,
            144, 0,
            8, 8,
            (b.x+c.x)*8, (b.y+c.y)*8,
            8, 8,
        );*/
        //console.log("Moved: "+c.x + ", "+c.y)
        c.x = (c.x + b.x+28)%28;
        c.y = c.y + b.y;
        c.facing = b.f;
    }
}